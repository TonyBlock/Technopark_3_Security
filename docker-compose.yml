version: "3"

services:
    postgres:
        image: postgres:latest
        container_name: db_postgres
        command: -p 5433 
        environment:
            - POSTGRES_USER=anton
            - POSTGRES_PASSWORD=db_password
            - POSTGRES_DB=db_repeater
            - DATABASE_HOST=db
            - TZ=Europe/Moscow
        ports:
            - "5433:5433"
        volumes:
            - database_postgres:/var/lib/postgresql/data
        healthcheck:
            test: /usr/bin/pg_isready
            interval: 30s
            timeout: 10s
            retries: 5

    proxy:
        build:
            context: .
            dockerfile: ./Dockerfile-proxy
        container_name: "2022_1_Security_Proxy"
        ports:
            - "8080:8080"
        expose:
            - "8080"
        environment:
            - DB_PORT=5433
            - POSTGRES_USER=anton
            - POSTGRES_PASSWORD=db_password
            - POSTGRES_DB=db_repeater
            - DATABASE_HOST=db
        volumes:
            - ./:/proxy
        restart: on-failure
        depends_on:
            - postgres
        links:
            - "postgres:db"

    repeater:
        environment:
            - DB_PORT=5433
            - POSTGRES_USER=anton
            - POSTGRES_PASSWORD=db_password
            - POSTGRES_DB=db_repeater
            - DATABASE_HOST=db
            - TZ=Europe/Moscow
        build:
            context: .
            dockerfile: ./Dockerfile-repeater
        container_name: "2022_1_Security_Repeater"
        ports: 
            - "8000:8000"
        expose:
            - "8000"
        volumes:
            - ./:/repeater
        restart: on-failure
        depends_on:
            - postgres
        links:
            - "postgres:db"

volumes:
    .:
    database_postgres:
